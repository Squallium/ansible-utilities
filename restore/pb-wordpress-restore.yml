---
- hosts: wordpress-restore
  become: yes
  remote_user: ubuntu
  vars:
    user: ubuntu
    home_path: "/home/{{user}}"
    backup_path: "{{home_path}}/backups"
    backup_mysql_name: dump-20180819-091642.zip
    backup_volume_wp_name: volume-wordpress-20180818-093624.zip
  tasks:
  - name: ping
    ping:
  - name: Include secret vars
    include_vars:
      file: secret-wordpress-restore.yml
      name: secret
#  - name: Run apt-get update
#    become: yes
#    apt:
#      update_cache=yes
#      cache_valid_time=3600
#  - include: ../util/pb-install-docker.yml
#  - name: Installed boto3
#    pip:
#      name: boto3
  - name: Delete files folder
    file:
      path: '{{ backup_path }}'
      state: absent
    ignore_errors: True
  - name: Creates directory backup
    file:
      path: '{{ backup_path }}'
      state: directory
      owner: '{{ user }}'
      group: '{{ user }}'
  - name: Get backed files from s3
    aws_s3:
      aws_access_key: "{{secret.aws_access_key}}"
      aws_secret_key: "{{secret.aws_secret_key}}"
      region: "{{secret.aws_region_name}}"
      bucket: "{{secret.aws_s3_bucket_name}}"
      object: "/{{secret.aws_s3_bucket_folder}}/{{item}}"
      dest: "{{backup_path}}/{{item}}"
      mode: get
    with_items:
      - "{{backup_mysql_name}}"
      - "{{backup_volume_wp_name}}"
  - name: Creates dumps directory
    file:
      path: '{{ backup_path }}/dumps'
      state: directory
      owner: '{{ user }}'
      group: '{{ user }}'
  - name: Extract the zip files
    shell: unzip -o "{{backup_path}}/{{item.file}}" -d "{{item.dest}}"
    with_items:
      - { file: "{{backup_mysql_name}}", dest: "{{ backup_path }}/dumps" }
      - { file: "{{backup_volume_wp_name}}", dest:  "{{home_path}}"}
  - name: Change dump file owner to mysql user
    file:
      path: "{{ backup_path }}/dumps"
      owner: 999
      group: 999
      mode: 0755
      recurse: yes
  - name: Run MariaDB docker and load dump file
    docker_container:
      name: mariadb
      image: mariadb:10.3.8
      restart: yes
      restart_policy: always
      ports:
        - "3306:3306"
      volumes:
        - "{{backup_path}}/dumps:/docker-entrypoint-initdb.d"
        - "{{home_path}}/database:/var/lib/mysql"
      env:
        MYSQL_ROOT_PASSWORD: "{{ secret.mysql_root_password }}"
        MYSQL_USER: "{{ secret.mysql_user }}"
        MYSQL_PASSWORD: "{{ secret.mysql_password }}"
        MYSQL_DATABASE: "{{ secret.mysql_database }}"
#  - name: waiting 30 seconds for mariadb starting
#    pause:
#      seconds: 30
#  - name: Run Wordpress docker
#    docker_container:
#      name: wordpress
#      image: wordpress
#      restart: yes
#      restart_policy: unless-stopped
#      ports:
#        - "80:80"
#        - "443:443"
#      links:
#          - "mariadb:mysql"
#      volumes:
#        - "{{home_path}}/html:/var/www/html"
